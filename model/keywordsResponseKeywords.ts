/**
 * Megaputer Text Mining API
 * Megaputer Text Mining API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { KeywordsResponsePositions } from './keywordsResponsePositions';

export class KeywordsResponseKeywords {
    /**
    * Normalized keyword
    */
    'keyword'?: string;
    /**
    * Indicates negation in the semantics of the word and returns the boolean values
    */
    'negated'?: boolean;
    /**
    * Part of speech of the keyword
    */
    'partOfSpeech'?: KeywordsResponseKeywords.PartOfSpeechEnum;
    /**
    * How distinct a particular keyword is for the explored text. Significance is calculated on a scale of 0,00 to 100,00. The greater the significance, the greater the chance that the concepts in the investigated data revolve around such a word. 
    */
    'significance'?: number;
    /**
    * The number of different records containing the keyword
    */
    'support'?: number;
    /**
    * The number of times the keyword appears in the data
    */
    'frequency'?: number;
    /**
    * Keyword positions in text
    */
    'positions'?: Array<KeywordsResponsePositions>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "keyword",
            "baseName": "keyword",
            "type": "string"
        },
        {
            "name": "negated",
            "baseName": "negated",
            "type": "boolean"
        },
        {
            "name": "partOfSpeech",
            "baseName": "partOfSpeech",
            "type": "KeywordsResponseKeywords.PartOfSpeechEnum"
        },
        {
            "name": "significance",
            "baseName": "significance",
            "type": "number"
        },
        {
            "name": "support",
            "baseName": "support",
            "type": "number"
        },
        {
            "name": "frequency",
            "baseName": "frequency",
            "type": "number"
        },
        {
            "name": "positions",
            "baseName": "positions",
            "type": "Array<KeywordsResponsePositions>"
        }    ];

    static getAttributeTypeMap() {
        return KeywordsResponseKeywords.attributeTypeMap;
    }
}

export namespace KeywordsResponseKeywords {
    export enum PartOfSpeechEnum {
        Noun = <any> 'Noun',
        Verb = <any> 'Verb',
        Adverb = <any> 'Adverb',
        Adjective = <any> 'Adjective'
    }
}
